name: Collect Commits to S3

on:
  # Schedule: runs daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD)'
        required: true
        type: string
      end_date:
        description: 'End date (YYYY-MM-DD)'
        required: true
        type: string
      repository_filter:
        description: 'Repository filter (optional, e.g.: repo1,repo2)'
        required: false
        type: string

jobs:
  collect-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install PyGithub boto3 python-dateutil

      - name: Collect and Upload Commits (Scheduled)
        if: github.event_name == 'schedule'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          # Yesterday's date (collects previous day commits)
          START_DATE=$(date -d "yesterday" +%Y-%m-%d)
          END_DATE=$(date -d "yesterday" +%Y-%m-%d)
          python collect_commits.py \
            --start-date "$START_DATE" \
            --end-date "$END_DATE"

      - name: Collect and Upload Commits (Manual)
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          python collect_commits.py \
            --start-date "${{ inputs.start_date }}" \
            --end-date "${{ inputs.end_date }}" \
            --repo-filter "${{ inputs.repository_filter }}"